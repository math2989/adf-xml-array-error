{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataFlow_Source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataFlow_Sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FlattenOrganization"
				}
			],
			"script": "source(output(\n\t\t{env:Envelope} as ({env:Body} as ({wd:Get_Organizations_Response} as ({wd:Response_Data} as ({wd:Organization} as ({wd:Organization_Data} as ({wd:Organization_Visibility_Reference} as ({wd:ID} as ({wd:_value_} as string, {wd:type} as string)[])))[]), {wd:version} as string)))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpurgeFiles: true,\n\tvalidationMode: 'none',\n\tnamespaces: true,\n\tnamespacePrefixes: ['http://schemas.xmlsoap.org/soap/envelope/'->'env','urn:com.workday/bsvc'->'wd'],\n\twildcardPaths:['*']) ~> source1\nsource1 foldDown(unroll({env:Envelope}.{env:Body}.{wd:Get_Organizations_Response}.{wd:Response_Data}.{wd:Organization}),\n\tmapColumn(\n\t\t{env:Envelope} = {env:Envelope}.{env:Body}.{wd:Get_Organizations_Response}.{wd:Response_Data}.{wd:Organization}.{wd:Organization_Data}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenOrganization\nFlattenOrganization sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['data.parquet'],\n\tmapColumn(\n\t\tOrganization_Visibility_Reference_WID = {env:Envelope}.{wd:Organization_Visibility_Reference}.{wd:ID}[1].{wd:_value_}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}